version: 2.1

orbs:
 aws-cli: circleci/aws-cli@1.3.0
 aws-eks: circleci/aws-eks@1.0.2
 aws-ecr: circleci/aws-ecr@6.13.0

jobs:
  Build-And-Push:
    docker:
      - image: public.ecr.aws/kubeopsskills/circleci:1.0.1-kubernetes-krane
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Docker Container Registry Login
          command: |
            echo ${CR_PASS} | docker login --username ${CR_USER} --password-stdin 
      - run:
          name: Build and Push Docker Image to Container Registry
          command: |
            docker build -t ${REGISTRY} .
            docker push ${REGISTRY}
      - run:
          name: Clone Repository
          command: |
            git clone https://github.com/kubeopsskills/proen-cloud-demo.git
            cd proen-cloud-demo/system/deployment
      - run:
          name: Get Context
          command: |
            cat ${CA} > ca.crt
            cat ${KEY} > key.crt
            kubectl config set-cluster kubeops-proen --server=https://node24791-env-5409266.th1.proen.cloud:11175
            kubectl config set-context kubeops-proen --cluster=kubeops-proen
            kubectl config set-credentials kubeops --client-certificate=ca.crt --client-key=key.crt
            kubectl config set-context kubeops-proen --user=kubeops && \
            kubectl config use-context kubeops-proen
            krane deploy 

  Deploy-Service:
    parameters:
      CONFIGURATION_BRANCH:
        description: name of branch
        type: string
      CONFIGURATION_REPO_URL:
        description: configuration repository url
        type: string
      CONFIGURATION_REPO_NAME:
        description: configuration repository name
        type: string
    docker:
      - image: public.ecr.aws/a1p3q7r0/alpine:3.12.0
    steps:
      - run:
          name: Download Dependencies
          command: |
            apk add --no-cache git wget bash
      - run:
          name: install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mv ./kubectl /usr/local/bin
      - run:
          name: Clone Repository
          command: |
            apk add --no-cache git bash
            git clone https://github.com/kubeopsskills/proen-cloud-demo.git
            cd proen-cloud-demo/system/deployment
      - run:
          name: Get KubeContext
          command: |
            cat ${CA} > ca.crt
            cat ${KEY} > key.crt
            kubectl config set-cluster kubeops-proen --server=https://node24791-env-5409266.th1.proen.cloud:11175
            kubectl config set-context kubeops-proen --cluster=kubeops-proen
            kubectl config set-credentials kubeops --client-certificate=ca.crt --client-key=key.crt
            kubectl config set-context kubeops-proen --user=kubeops && \
            kubectl config use-context kubeops-proen
            kubectl apply -f kubeops-deploy.yaml
      
      - persist_to_workspace:
          root: ~/
          paths:
          - project/<< parameters.CONFIGURATION_REPO_NAME >>

workflows:
  version: 2
  Dev_WorkFlow:
    jobs:
    - Build-And-Push:
        filters:
            branches:
              only: 
              - develop
              - /hotfix.*/
        context: 
        - proen-cloud
    - Deploy-Service:
        filters:
            branches:
              only: 
              - develop
              - /hotfix.*/
        require:
        - Build-And-Push
        context: 
        - proen-cloud